// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ipc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ipc_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ipc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ipc_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ipc_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ipc_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_ipc_2eproto_metadata_getter(int index);
class msg;
struct msgDefaultTypeInternal;
extern msgDefaultTypeInternal _msg_default_instance_;
class msg_Data;
struct msg_DataDefaultTypeInternal;
extern msg_DataDefaultTypeInternal _msg_Data_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::msg* Arena::CreateMaybeMessage<::msg>(Arena*);
template<> ::msg_Data* Arena::CreateMaybeMessage<::msg_Data>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class msg_Data PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg.Data) */ {
 public:
  inline msg_Data() : msg_Data(nullptr) {}
  virtual ~msg_Data();
  explicit constexpr msg_Data(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  msg_Data(const msg_Data& from);
  msg_Data(msg_Data&& from) noexcept
    : msg_Data() {
    *this = ::std::move(from);
  }

  inline msg_Data& operator=(const msg_Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg_Data& operator=(msg_Data&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg_Data& default_instance() {
    return *internal_default_instance();
  }
  static inline const msg_Data* internal_default_instance() {
    return reinterpret_cast<const msg_Data*>(
               &_msg_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(msg_Data& a, msg_Data& b) {
    a.Swap(&b);
  }
  inline void Swap(msg_Data* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg_Data* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg_Data* New() const final {
    return CreateMaybeMessage<msg_Data>(nullptr);
  }

  msg_Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg_Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg_Data& from);
  void MergeFrom(const msg_Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg_Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg.Data";
  }
  protected:
  explicit msg_Data(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ipc_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDatFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // bytes dat = 2;
  void clear_dat();
  const std::string& dat() const;
  void set_dat(const std::string& value);
  void set_dat(std::string&& value);
  void set_dat(const char* value);
  void set_dat(const void* value, size_t size);
  std::string* mutable_dat();
  std::string* release_dat();
  void set_allocated_dat(std::string* dat);
  private:
  const std::string& _internal_dat() const;
  void _internal_set_dat(const std::string& value);
  std::string* _internal_mutable_dat();
  public:

  // int64 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg.Data)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dat_;
  ::PROTOBUF_NAMESPACE_ID::int64 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ipc_2eproto;
};
// -------------------------------------------------------------------

class msg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:msg) */ {
 public:
  inline msg() : msg(nullptr) {}
  virtual ~msg();
  explicit constexpr msg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  msg(const msg& from);
  msg(msg&& from) noexcept
    : msg() {
    *this = ::std::move(from);
  }

  inline msg& operator=(const msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline msg& operator=(msg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const msg& default_instance() {
    return *internal_default_instance();
  }
  static inline const msg* internal_default_instance() {
    return reinterpret_cast<const msg*>(
               &_msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(msg& a, msg& b) {
    a.Swap(&b);
  }
  inline void Swap(msg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(msg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline msg* New() const final {
    return CreateMaybeMessage<msg>(nullptr);
  }

  msg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<msg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const msg& from);
  void MergeFrom(const msg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "msg";
  }
  protected:
  explicit msg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_ipc_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef msg_Data Data;

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 4,
    kVersionFieldNumber = 1,
    kLengthFieldNumber = 2,
    kCommandFieldNumber = 3,
  };
  // repeated .msg.Data data = 4;
  int data_size() const;
  private:
  int _internal_data_size() const;
  public:
  void clear_data();
  ::msg_Data* mutable_data(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg_Data >*
      mutable_data();
  private:
  const ::msg_Data& _internal_data(int index) const;
  ::msg_Data* _internal_add_data();
  public:
  const ::msg_Data& data(int index) const;
  ::msg_Data* add_data();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg_Data >&
      data() const;

  // int64 version = 1;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 length = 2;
  void clear_length();
  ::PROTOBUF_NAMESPACE_ID::int64 length() const;
  void set_length(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_length() const;
  void _internal_set_length(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int64 command = 3;
  void clear_command();
  ::PROTOBUF_NAMESPACE_ID::int64 command() const;
  void set_command(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_command() const;
  void _internal_set_command(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:msg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg_Data > data_;
  ::PROTOBUF_NAMESPACE_ID::int64 version_;
  ::PROTOBUF_NAMESPACE_ID::int64 length_;
  ::PROTOBUF_NAMESPACE_ID::int64 command_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ipc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msg_Data

// int64 id = 1;
inline void msg_Data::clear_id() {
  id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_Data::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg_Data::id() const {
  // @@protoc_insertion_point(field_get:msg.Data.id)
  return _internal_id();
}
inline void msg_Data::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  id_ = value;
}
inline void msg_Data::set_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:msg.Data.id)
}

// bytes dat = 2;
inline void msg_Data::clear_dat() {
  dat_.ClearToEmpty();
}
inline const std::string& msg_Data::dat() const {
  // @@protoc_insertion_point(field_get:msg.Data.dat)
  return _internal_dat();
}
inline void msg_Data::set_dat(const std::string& value) {
  _internal_set_dat(value);
  // @@protoc_insertion_point(field_set:msg.Data.dat)
}
inline std::string* msg_Data::mutable_dat() {
  // @@protoc_insertion_point(field_mutable:msg.Data.dat)
  return _internal_mutable_dat();
}
inline const std::string& msg_Data::_internal_dat() const {
  return dat_.Get();
}
inline void msg_Data::_internal_set_dat(const std::string& value) {
  
  dat_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void msg_Data::set_dat(std::string&& value) {
  
  dat_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:msg.Data.dat)
}
inline void msg_Data::set_dat(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dat_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:msg.Data.dat)
}
inline void msg_Data::set_dat(const void* value,
    size_t size) {
  
  dat_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:msg.Data.dat)
}
inline std::string* msg_Data::_internal_mutable_dat() {
  
  return dat_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* msg_Data::release_dat() {
  // @@protoc_insertion_point(field_release:msg.Data.dat)
  return dat_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void msg_Data::set_allocated_dat(std::string* dat) {
  if (dat != nullptr) {
    
  } else {
    
  }
  dat_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dat,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:msg.Data.dat)
}

// -------------------------------------------------------------------

// msg

// int64 version = 1;
inline void msg::clear_version() {
  version_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg::version() const {
  // @@protoc_insertion_point(field_get:msg.version)
  return _internal_version();
}
inline void msg::_internal_set_version(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  version_ = value;
}
inline void msg::set_version(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:msg.version)
}

// int64 length = 2;
inline void msg::clear_length() {
  length_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg::_internal_length() const {
  return length_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg::length() const {
  // @@protoc_insertion_point(field_get:msg.length)
  return _internal_length();
}
inline void msg::_internal_set_length(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  length_ = value;
}
inline void msg::set_length(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:msg.length)
}

// int64 command = 3;
inline void msg::clear_command() {
  command_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg::_internal_command() const {
  return command_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 msg::command() const {
  // @@protoc_insertion_point(field_get:msg.command)
  return _internal_command();
}
inline void msg::_internal_set_command(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  command_ = value;
}
inline void msg::set_command(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:msg.command)
}

// repeated .msg.Data data = 4;
inline int msg::_internal_data_size() const {
  return data_.size();
}
inline int msg::data_size() const {
  return _internal_data_size();
}
inline void msg::clear_data() {
  data_.Clear();
}
inline ::msg_Data* msg::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:msg.data)
  return data_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg_Data >*
msg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:msg.data)
  return &data_;
}
inline const ::msg_Data& msg::_internal_data(int index) const {
  return data_.Get(index);
}
inline const ::msg_Data& msg::data(int index) const {
  // @@protoc_insertion_point(field_get:msg.data)
  return _internal_data(index);
}
inline ::msg_Data* msg::_internal_add_data() {
  return data_.Add();
}
inline ::msg_Data* msg::add_data() {
  // @@protoc_insertion_point(field_add:msg.data)
  return _internal_add_data();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::msg_Data >&
msg::data() const {
  // @@protoc_insertion_point(field_list:msg.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ipc_2eproto
